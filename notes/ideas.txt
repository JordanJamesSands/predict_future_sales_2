Template:
	Title:
		idea:
		notes:
		result:
try this
check week2 advice work i did

try this
test_validation:
	idea: iterate costant solutions, compare validation with public leaderboard
	notes:
	result:


try this
probe_leaderboard:
	idea: find optimal single value solution, this should be mean of submissions?
	notes: 
		-I did this before, look it up
	result:


try this
lagged / cumulative over time / mean over time feature engineering


---LESS IMPORTANT/LATER STUFF---

try this
colour code vim correctly

try this
target_encode and XGBoost
	idea: mean encode some basic variable then run XGboost
	notes:
		-i think this was advice
	result:
try this
drop old data:
	idea: drop data from a long time ago
	notes: 
		-the model / feature enginering might do this anyway
	result:
try this
run catboost after feature engineering

try this
look inside catboost:
	idea: get an idea of variable importance and interactions
	notes:
	result:


validation:
	idea: create a validation sample
	notes: 
		-For N months, select M as initial training set, validated on M+1'th month, then M+=1, repeat 
	result: created validation_split.R

catboost_benchmark:
	idea: run catboost on inital data set to get a benchmark
	notes:
		-saved in gen_data/catboost_submission.csv
		-notebook at eda/scripts/catboost_benchmark.ipynb
	result: scored 1.86768


remove outliers
	idea: remove outliers
	notes: 
		-the clipping that mimics competition guidelines took care of outliers
	result:done, (i clipped sales values)



check leak:
	idea: check test subset to see if its accosiated with any other vars
	notes:
		-eda/check_test_sampling.R
		-dataset too large, try aggregating first, did this
	result: no obvious relationship between sales and inclusion of item/shop combo in test set


aggregate:
	idea: aggregate train data to make it compatible with test
	notes: 
		-need to also clip sales values between [0,20]
	result: aggregation script is preproc/aggregate.R
stitch:
	idea: merge input data
	notes; 
		-drop rows with Nas generated by merging, these contain only items
	result: done, in preproc/stitch.R

